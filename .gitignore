# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*.tfplan
*.tfplan.*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore lock files (optional - you may want to commit these)
# .terraform.lock.hcl

# Ignore any local environment files
.env
.env.local
.env.*.local

# Ignore OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Ignore IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore log files
*.log
logs/

# Ignore temporary files
*.tmp
*.temp

# Ignore backup files
*.bak
*.backup

# Ignore AWS credentials and configuration
.aws/
aws-credentials

# Ignore SSH keys
*.pem
*.key
id_rsa
id_rsa.pub

# Ignore certificates
*.crt
*.pem
*.p12
*.pfx

# Ignore database dumps
*.sql
*.dump

# Ignore node modules if any
node_modules/

# Ignore Python cache
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so

# Ignore Java compiled files
*.class
*.jar
*.war

# Ignore backup files created by editors
*~
*.orig
*.rej

# Ignore Terraform backend configuration with sensitive data
backend.tf
backend.tf.json

# Ignore any files with sensitive information
*secret*
*password*
*credential*
*token*
*key* 